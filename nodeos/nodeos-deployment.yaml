apiVersion: v1
kind: Namespace
metadata:
  name: nodeos
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nodeos-svc
#   namespace: nodeos
#   labels:
#     app: nodeos
# spec:
  
#   # type: ClusterIP
#   # externalTrafficPolicy: Local
#   clusterIP: None
#   ports:
#   - port: 80
#     targetPort: 80
#     protocol: TCP
#     name: http
#   - port: 443
#     targetPort: 443
#     protocol: TCP
#     name: https
#   selector:
#     app: nodeos

# ---


apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nodeos-ingress
  annotations:
    kubernetes.to/ingress.class: nodeos
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "nodeos.helixious.local"
    http:
      paths:
      - path: /
        backend:
          serviceName: nodeos-svc
          servicePort: 8888
      - path: /master/p2p
        backend:
          serviceName: nodeos-svc
          servicePort: 9000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nodeos
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodeos
  serviceName: nodeos-svc
  template:
    metadata:
      labels:
        app: nodeos
    spec:
      containers:
      - name: nodeos
        
        tty: true
        image: helixious86/eos_base_image:v1.1.4
        resources: {}
        env:
        - name: CDT_VERSION
          value: v1.7.0
        - name: EOS_VERSION
          value: v2.0.3
        - name: INSTANCE_TYPE
          value: master
        - name: P2P_PORT
          value: "9000"
        - name: SERVER_PORT
          value: "8888"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
          - containerPort: 80
          - containerPort: 443
          - containerPort: 8888
          - containerPort: 9000