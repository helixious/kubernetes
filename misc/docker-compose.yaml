version: '3.8'
# version: '2'
# - target: 8888
#         published: 8888
#         mode: ingress
#       - target: 9000
#         published: 9000
#         mode: ingress

networks: 
  blockchain:
    driver: overlay
    ipam: 
     driver: default
services:
  web:
    image: nginx
    networks:
      - blockcahin
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ".:/data:ro"
      # - "./nginx.conf:/etc/nginx/nginx.conf"
    environment:
      - NGINX_HOST=helxious.com
      - NGINX_PORT=80
    deploy:
        replicas: 1
        restart_policy:
            condition: none
  master:
    image: helixious86/eos_base_image:centos7.v1.1.3
    networks:
      - blockchain
    # ports:
    #   - "6666:6666"
    #   - "7777:7777"
      # - target: 8888
      #   published: 8888
      #   mode: ingress
      # - target: 9000
      #   published: 9000
      #   mode: ingress
    volumes:
      - ".:/data:rw"
    environment:
      - INSTANCE_TYPE=master
      - CDT_VERSION=v1.7.0
      - EOS_VERSION=v2.0.3
      - SERVER_PORT=8888
      - P2P_PORT=9000
    deploy:
        replicas: 1
        restart_policy:
            condition: none
    working_dir: /data
    tty: true
    entrypoint: bash -c "./init.sh && /bin/bash"
  node-a:
    image: helixious86/eos_base_image:centos7.v1.1.3
    networks:
      - blockchain
    volumes:
      - ".:/data:rw"
    environment:
      - INSTANCE_TYPE=node.a
      - CDT_VERSION=v1.7.0
      - EOS_VERSION=v2.0.3
      - SERVER_PORT=8888
      - P2P_PORT=9000
    deploy:
        replicas: 1
        restart_policy:
            condition: none
    working_dir: /data
    tty: true
    entrypoint: bash -c "/bin/bash"
  node-b:
    image: helixious86/eos_base_image:centos7.v1.1.3
    networks:
      - blockchain
    volumes:
      - ".:/data:rw"
    environment:
      - INSTANCE_TYPE=node.b
      - CDT_VERSION=v1.7.0
      - EOS_VERSION=v2.0.3
      - SERVER_PORT=8888
      - P2P_PORT=9000
    deploy:
        replicas: 1
        restart_policy:
            condition: none
    working_dir: /data
    tty: true
    entrypoint: bash -c "./init.sh && /bin/bash"
  node-c:
    image: helixious86/eos_base_image:centos7.v1.1.2
    networks:
      - blockchain
    volumes:
      - ".:/data:rw"
    environment:
      - INSTANCE_TYPE=node.c
      - CDT_VERSION=v1.7.0
      - EOS_VERSION=v2.0.3
      - SERVER_PORT=8888
      - P2P_PORT=9000
    deploy:
        replicas: 1
        restart_policy:
            condition: none
    working_dir: /data
    tty: true
    entrypoint: bash -c "./init.sh && /bin/bash"

    # enviroment variables in .env filer
# EOSIO_VERSION v2.0.5
# EOSIO_CDT_VERSION v1.0
# SMART_CONTRACT_NAME tasks2
# PROJECT_PATH .
# yum install -y epel-release && yum update -y && yum install -y cmake3 git wget aptitude curl gcc gcc-c++ apt-utils && ln -s /usr/bin/cmake3 /usr/bin/cmake && ./install_deb.sh $$cdt $$eos $$contract