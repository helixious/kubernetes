apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosio-deployment
  namespace: default
  labels:
    eosio: master
spec:
  selector:
    matchLabels:
      eosio: master
  template:
    metadata:
      namespace: default
      labels:
        eosio: master
    spec:
      nodeName: docker-desktop
      containers:
      - command:
        - bash
        - -c
        - ./init.sh && /bin/bash
        env:
        - name: CDT_VERSION
          value: v1.7.0
        - name: EOS_VERSION
          value: v2.0.3
        - name: INSTANCE_TYPE
          value: master
        - name: P2P_PORT
          value: "9000"
        - name: SERVER_PORT
          value: "8888"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: helixious86/eos_base_image:centos7.v1.1.3
        imagePullPolicy: IfNotPresent
        resources: {}
        replica: 2
        name: node-a
        tty: true
        volumeMounts:
        - name: data
          mountPath: /data
          subPath: eos_bios_setup
        workingDir: /data
        ports:
          - containerPort: 80
          - containerPort: 443
          - containerPort: 8888
          - containerPort: 9000

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eosio-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  backend:
    serviceName: master
    servicePort: 8080
  rules:
  - http:
      paths:
      - path: /master
        backend:
          serviceName: master
          servicePort: 8888
      - path: /master/p2p
        backend:
          serviceName: master
          servicePort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: master
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  - name: server
    port: 8888
    targetPort: 8888
    protocol: TCP
  - name: p2p
    port: 9000
    targetPort: 9000
    protocol: TCP
  clusterIP: None
  selector:
    eosio: master